package fielden.com.ua.search;

public class Edge<T>{
	private final Vertex<T> sourse, destination;

	public Edge(final Vertex<T> source, final Vertex<T> destination) {
		if (source == null) {
			throw new IllegalArgumentException("Source vertex should not be null.");
		}
		if (destination == null) {
			throw new IllegalArgumentException("Destination vertex should not be null.");
		}
		
		this.sourse = source;
		this.destination = destination;
	}

	public boolean equals(final Edge<T> obj) {
		return sourse.equals(obj.getSource())
				&& destination.equals(obj.getDestination());
	}

	public Vertex<T> getSource() {
		return sourse;
	}

	public Vertex<T> getDestination() {
		return destination;
	}

	@Override
	public String toString() {
		return "(" + sourse.getElement() + ", " + destination.getElement() + ")";
	}



}
